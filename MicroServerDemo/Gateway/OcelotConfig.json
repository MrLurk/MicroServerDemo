//{
//  "ReRoutes": [
//    {
//      "DownstreamPathTemplate": "/{url}", //服务地址--url变量
//      "DownstreamScheme": "https",
//      "DownstreamHostAndPorts": [
//        {
//          "Host": "localhost",
//          "Port": 5003 //服务端口
//        } //可以多个，自行负载均衡
//      ],
//      "UpstreamPathTemplate": "/Service1/{url}", //网关地址--url变量   //冲突的还可以加权重Priority
//      "UpstreamHttpMethod": [ "Get", "Post" ]
//    }
//  ]
//}


// --------------------------------------------------------

{
  "ReRoutes": [
    {
      "DownstreamPathTemplate": "/{url}", //服务地址--url变量
      "DownstreamScheme": "https",
      "UpstreamPathTemplate": "/Service1/{url}", //网关地址--url变量
      "UpstreamHttpMethod": [ "Get", "Post" ],
      "ServiceName": "Service1", //consul服务名称
      "LoadBalancerOptions": {
        "Type": "RoundRobin" //轮询      LeastConnection-最少连接数的服务器   NoLoadBalance不负载均衡
      },
      "UseServiceDiscovery": true,
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3, //允许多少个异常请求
        "DurationOfBreak": 10000, // 熔断的时间，单位为ms
        "TimeoutValue": 10000 //如果下游请求的处理时间超过多少则自如将请求设置为超时 默认90秒
      },
      "RateLimitOptions": {
        "ClientWhitelist": [], //白名单
        "EnableRateLimiting": true,
        "Period": "5m", //1s, 5m, 1h, 1d  jeffzhang
        "PeriodTimespan": 5, //多少秒之后客户端可以重试
        "Limit": 5 //统计时间段内允许的最大请求数量
      },
      "FileCacheOptions": {
        "TtlSeconds": 5 // 同一链接缓存数据 5s 
      } //"缓存"
    },
    {
      "DownstreamPathTemplate": "/{url}", //服务地址--url变量
      "DownstreamScheme": "https",
      "UpstreamPathTemplate": "/Service2/{url}", //网关地址--url变量
      "UpstreamHttpMethod": [ "Get", "Post" ],
      "ServiceName": "Service2", //consul服务名称
      "LoadBalancerOptions": {
        "Type": "RoundRobin" //轮询      LeastConnection-最少连接数的服务器   NoLoadBalance不负载均衡
      },
      "UseServiceDiscovery": true,
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3, //允许多少个异常请求
        "DurationOfBreak": 10000, // 熔断的时间，单位为ms
        "TimeoutValue": 10000 //如果下游请求的处理时间超过多少则自如将请求设置为超时 默认90秒
      },
      "RateLimitOptions": {
        "ClientWhitelist": [], //白名单
        "EnableRateLimiting": true,
        "Period": "5m", //1s, 5m, 1h, 1d  jeffzhang
        "PeriodTimespan": 5, //多少秒之后客户端可以重试
        "Limit": 5 //统计时间段内允许的最大请求数量
      },
      "FileCacheOptions": {
        "TtlSeconds": 5 // 同一链接缓存数据 5s 
      } //"缓存"
    }
  ],
  "GlobalConfiguration": {
    "BaseUrl": "https://localhost:5009", //网关对外地址
    "ServiceDiscoveryProvider": {
      "Host": "localhost",
      "Port": 8500,
      "Type": "Consul" //由Consul提供服务发现
    },
    // 限流
    "RateLimitOptions": {
      "QuotaExceededMessage": "Requests are too frequent!", // 当请求过载被截断时返回的消息
      "HttpStatusCode": 999 // 当请求过载被截断时返回的http status
    }
  }
}
